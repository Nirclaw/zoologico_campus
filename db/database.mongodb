use("mongo_zoo");
db.createCollection("contador");
db.contador.insertMany([
  { id: "clienteID", contador_valor: 0 },
  { id: "animalesID", contador_valor: 0 },
  { id: "empleadosID", contador_valor: 0 }, { id: "zonasID", contador_valor: 0 }, {}
]);



use("mongo_zoo");
db.createCollection("animales", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      title: "animales",
      required: [
        "id",
        "nombre",
        "especie",
        "edad",
        "sexo",
        "tipo_alimentacion",
        "tamano",
        "peso",
        "zona",
        "habitat",
        "historial_medico",
      ],
      properties: {
        id: {
          bsonType: "number",
          description: "el tipo de dato es incorrecto",
        },
        nombre: {
          bsonType: "string",
          description: "Dato incorrecto incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
        especie: {
          bsonType: "string",
          description: "Dato es incorrecto",
        },
        edad: {
          bsonType: "number",
          description: "Dato incorrecto",
          pattern: "^(?:100|[1-9][0-9]?)$",
        },
        tipo_alimentacion: {
          enum: ["plantas", "carne", "inseptos", "frutas"]
          , description: "plantas o carne o inseptos o frutas"
        },
        sexo: {
          enum: ["macho", "hembra"],
          description: "Debeser macho o hembra",
        },
        altura: {
          bsonType: "number",
          description: "dato in correcto"
        },
        peso: {
          bsonType: "number",
          description: "el dato es incorrecto",
        },
        zona: {
          bsonType: "string",
          description: "el dato es incorrecto",
        },
        habitat: {
          bsonType: "string",
          description: "el dato es incorrecto",
        },
        historial_medico: {
          bsonType: "string",
          description: "el dato es incorrecto",
        },
      },
    },
  },
});

use("mongo_zoo");
db.createCollection("empleados", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      title: "empleados",
      required: [
        "id",
        "cedula",
        "nombre",
        "departamento",
        "cargo",
        "telefono",
        "correo_electronico",
        "direccion"
      ],
      properties: {
        id: {
          bsonType: "number",
          description: "el tipo es dato incorrecto",
        },
        cedula: {
          bsonType: "number",
          description: "el tipo de dato es incorrecto"
        },
        nombre: {
          bsonType: "string",
          description: "El tipo de dato es incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
        departamento: {
          bsonType: "string",
          description: "El tipo de dato es incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
        cargo: {
          bsonType: "string",
          description: "El tipo de dato es incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
        telefono: {
          bsonType: "number",
          description: "el tipo de dato es incorrecto",
        },
        correo_electronico: {
          bsonType: "string",
          description: "El tipo de dato no es correcto",
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$",
        },
        direccion: {
          bsonType: "string",
          description: "el tipo de dato no es correct"
        }
      },
    },
  },
});

use("mongo_zoo");
db.createCollection("insumos", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      title: "insumos",
      required: [
        "id",
        "nombre",
        "descripcion",
        "fecha_compra",
        "cantidad",
        "proveedor",
      ],
      properties: {
        id: {
          bsonType: "number",
          description: "el tipo es dato incorrecto",
        },
        nombre: {
          bsonType: "string",
          description: "dato incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
        descripcion: {
          bsonType: "string",
          description: "el dato es icorrecto",
        },
        fecha_compra: {
          bsonType: "string",
          description: "la fecha debe ser YYYY-MM-DD",
          pattern:
            "/^(?:(?:19|20)dd)-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$/",
        },
        cantidad: {
          bsonType: "number",
          description: "el dato es incorrecto",
        },
        proveedor: {
          bsonType: "string",
          description: "dato incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
      },
    },
  },
});

use("mongo_zoo");
db.createCollection("zonas", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      title: "Zonas",
      required: ["id", "nombre", "descripcion", "clasificacion", "dimension"],
      properties: {
        id: {
          bsonType: "int",
          description: "el tipo de dato no es correcto"
        },
        nombre: {
          bsonType: "string",
          description: "Dato incorrecto incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        }, clasificacion: {
          bsonType: "string",
          description: "dato es incorrecto"
        },
        descripcion: {
          bsonType: "string",
          description: "el dato es icorrecto",
        },
        dimension: {
          bsonType: "object",
          required: ["ancho", "largo"],
          properties: {
            ancho: {
              bsonType: "number",
              description: "dato incorrecto",
            },
            largo: {
              bsonType: "number",
              description: "dato incorrecto",
            },
          },
        },
      },
    },
  },
});

use("mongo_zoo");
db.createCollection("taquilla", {

  validator: {
    $jsonSchema: {
      bsonType: "object",
      title: "taquilla",
      required: ["id", "cedula", "nombre", "telefono", "fecha_ingreso", "categoria"],
      properties: {
        id: {
          bsonType: "int",
          description: "el tipo de dato no es correcto"
        }, cedula: {
          bsonType: "number",
          description: "el tipo de dato es incorrecto"
        },
        nombre: {
          bsonType: "string",
          description: "El tipo de dato es incorrecto",
          pattern: "^[a-zA-ZáéíóúÁÉÍÓÚñÑs]*$",
        },
        telefono: {
          bsonType: "number",
          description: "el tipo de dato es incorrecto",
        },
        fecha_ingreso: {
          bsonType: "string",
          description: "la fecha debe ser YYYY-MM-DD",
          pattern:
            "/^(?:(?:19|20)dd)-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$/",
        },
        categoria: {
          bsonType: "object",
          required: ["tipo", "precio"],
          properties: {
            tipo: {
              enum: ["basico", "vip"],
              description: "debe ser basico o vip"
            },
            precio: {
              bsonType: "number",
              description: "el dato es incorrecto"
            }
          }
        }
      }
    }
  }
})
